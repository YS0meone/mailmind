"""simplified schema

Revision ID: af98b1b0c1b7
Revises: 3f51ffb2f992
Create Date: 2025-06-21 21:35:58.177734

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'af98b1b0c1b7'
down_revision: Union[str, Sequence[str], None] = '3f51ffb2f992'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, drop foreign key constraints that depend on tables we want to drop
    op.drop_constraint('emails_fromId_fkey', 'emails', type_='foreignkey')
    op.drop_constraint('threads_accountId_fkey', 'threads', type_='foreignkey')
    op.drop_constraint('email_addresses_accountId_fkey', 'email_addresses', type_='foreignkey')
    op.drop_constraint('email_attachments_emailId_fkey', 'email_attachments', type_='foreignkey')
    
    # Drop indexes
    op.drop_index('ix_threads_accountId', table_name='threads')
    op.drop_index('ix_email_addresses_account_address', table_name='email_addresses')
    
    # Now we can safely drop tables
    op.drop_table('email_attachments')
    op.drop_table('email_addresses')
    op.drop_table('accounts')
    
    # Modify existing tables
    # Update emails table
    op.add_column('emails', sa.Column('fromAddr', sa.String(), nullable=False))
    op.add_column('emails', sa.Column('toAddrs', postgresql.ARRAY(sa.String()), nullable=False))
    op.add_column('emails', sa.Column('ccAddrs', postgresql.ARRAY(sa.String()), nullable=False))
    op.add_column('emails', sa.Column('bccAddrs', postgresql.ARRAY(sa.String()), nullable=False))
    op.add_column('emails', sa.Column('replyToAddrs', postgresql.ARRAY(sa.String()), nullable=False))
    op.add_column('emails', sa.Column('attachments', sa.JSON(), nullable=False))
    op.drop_column('emails', 'fromId')
    
    # Update threads table
    op.add_column('threads', sa.Column('involvedEmails', postgresql.ARRAY(sa.String()), nullable=False))
    op.drop_column('threads', 'participantIds')
    op.drop_column('threads', 'accountId')
    
    # Add the GIN index for involvedEmails
    op.create_index('ix_threads_involved_emails_gin', 'threads', ['involvedEmails'], postgresql_using='gin')
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('threads', sa.Column('accountId', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('threads', sa.Column('participantIds', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('threads_accountId_fkey'), 'threads', 'accounts', ['accountId'], ['id'])
    op.create_index(op.f('ix_threads_accountId'), 'threads', ['accountId'], unique=False)
    op.drop_column('threads', 'involvedEmails')
    op.add_column('emails', sa.Column('fromId', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('emails_fromId_fkey'), 'emails', 'email_addresses', ['fromId'], ['id'])
    op.drop_column('emails', 'attachments')
    op.drop_column('emails', 'replyToAddrs')
    op.drop_column('emails', 'bccAddrs')
    op.drop_column('emails', 'ccAddrs')
    op.drop_column('emails', 'toAddrs')
    op.drop_column('emails', 'fromAddr')
    op.create_table('email_addresses',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('raw', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('accountId', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['accountId'], ['accounts.id'], name='email_addresses_accountId_fkey'),
    sa.PrimaryKeyConstraint('id', name='email_addresses_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_email_addresses_account_address'), 'email_addresses', ['accountId', 'address'], unique=True)
    op.create_table('accounts',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='accounts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('email_attachments',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('mimeType', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('inline', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('contentId', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('contentLocation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('emailId', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['emailId'], ['emails.id'], name=op.f('email_attachments_emailId_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('email_attachments_pkey'))
    )
    # ### end Alembic commands ###
